@model firestorm.Models.WorkOrderCompoundSample
@{
    Layout = "~/Views/Shared/Customer_Layout.cshtml";
}

<h2>Request Order</h2>
    
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
           
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <br />
        @{
            int iCount = 0;
            int iCount1 = 1;
            int iCount2 = 1;

            for (iCount = 0; iCount < Model.compoundSampleSampleTests.Count(); iCount++)
            {

                if (iCount2 == 1)
                {
                    <h3>@Model.compound.Name</h3>
                }
                else
                {
                    <h3>Compound @iCount2 </h3>
                }

                foreach (var Item in Model.compoundSampleSampleTests.ElementAt(iCount).sampleTests)
                {
                <h4>&nbsp;&nbsp;Assay @iCount1</h4>

                <div class="form-group">
                    <label for="AssayID" class="control-label col-md-2">Assay Test</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => Model.assays.ElementAt(iCount).AssayID, new SelectList(ViewBag.Assays, "AssayID", "Name", new {@class = "AssayDropDown" }))
                        @Html.ValidationMessageFor(model => Model.assays.ElementAt(iCount).AssayID, "", new { @class = "text-danger" })
                    </div>
                </div>
                    iCount1++;

                }
                iCount2++;
                <br /><br />
            }

            }

        <br /><br /><br /><br />
        <div class="form-group">
           <label class="control-label col-md-2">Desired Completion Date</label>
            <div class="col-md-10">
              <input type="date" name="DateDue" value="2017-12-30"/>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.workOrder.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.workOrder.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.workOrder.Comments, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}
                

            
